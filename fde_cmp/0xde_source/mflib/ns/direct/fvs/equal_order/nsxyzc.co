void samar(double,double,double,int);
 
void nsxyzc(coorr,coefr,prmt,eqn,emass,edamp,eload,num)
 double coefr[24],coorr[24],*prmt,eqn[1024];
 double emass[33],edamp[33],eload[33];
int num;
{
 int i,j,ncoor,nnode,ncoef,ndisp,ndof;
 double emu,rou,fx,fy,fz,cccc;
 double un[9],vn[9],wn[9];
 double x[9],y[9],z[9];
      double xc[3],uc[3];
      double fx13[3],fx16[3],fx18[3],fx27[3],fx38[3],fx57[3];
      double fu13[3],fu16[3],fu18[3],fu27[3],fu38[3],fu57[3];
      double x12[3],x14[3],x15[3],x23[3],x26[3],x34[3];
      double x37[3],x48[3],x56[3],x58[3],x67[3],x78[3];
      double u12[3],u14[3],u15[3],u23[3],u26[3],u34[3];
      double u37[3],u48[3],u56[3],u58[3],u67[3],u78[3];
      double flux12,flux21,flux12r,r12,r21;
      double flux14,flux41,flux14r,r14,r41;
      double flux15,flux51,flux15r,r15,r51;
      double flux23,flux32,flux23r,r23,r32;
      double flux26,flux62,flux26r,r26,r62;
      double flux34,flux43,flux34r,r34,r43;
      double flux37,flux73,flux37r,r37,r73;
      double flux48,flux84,flux48r,r48,r84;
      double flux56,flux65,flux56r,r56,r65;
      double flux58,flux85,flux58r,r58,r85;
      double flux67,flux76,flux67r,r67,r76;
      double flux78,flux87,flux78r,r78,r87;
      int mode;
      mode = 1;
      ncoor = 3;
      nnode = 8;
      ncoef = 3;
      ndisp = 4;
      ndof = 32;
 for (i=1; i<=ndof; ++i) {
   eload[i]=0.0;
   for (j=1; j<=ndof; ++j) {
    eqn[(i-1)*32+j-1]=0.0;
  }
 }
 emu=prmt[1];
 rou=prmt[2];
 fx=prmt[3];
 fy=prmt[4];
 fz=prmt[5];
 for (j=1; j<=nnode; ++j) {
      un[j]=coefr[(j-1)*3+1-1];
      vn[j]=coefr[(j-1)*3+2-1];
      wn[j]=coefr[(j-1)*3+3-1];
      x[j]=coorr[(1-1)*8+j-1];
      y[j]=coorr[(2-1)*8+j-1];
      z[j]=coorr[(3-1)*8+j-1];
 }
      xc[1]=(x[1]+x[2]+x[3]+x[4]+x[5]+x[6]+x[7]+x[8])/8;
      uc[1]=(un[1]+un[2]+un[3]+un[4]+un[5]+un[6]+un[7]+un[8])/8;
      xc[2]=(y[1]+y[2]+y[3]+y[4]+y[5]+y[6]+y[7]+y[8])/8;
      uc[2]=(vn[1]+vn[2]+vn[3]+vn[4]+vn[5]+vn[6]+vn[7]+vn[8])/8;
      xc[3]=(z[1]+z[2]+z[3]+z[4]+z[5]+z[6]+z[7]+z[8])/8;
      uc[3]=(wn[1]+wn[2]+wn[3]+wn[4]+wn[5]+wn[6]+wn[7]+wn[8])/8;
      x12[1]=(x[1]+x[2])/2;
      x14[1]=(x[1]+x[4])/2;
      x15[1]=(x[1]+x[5])/2;
      x23[1]=(x[2]+x[3])/2;
      x26[1]=(x[2]+x[6])/2;
      x34[1]=(x[3]+x[4])/2;
      x37[1]=(x[3]+x[7])/2;
      x48[1]=(x[4]+x[8])/2;
      x56[1]=(x[5]+x[6])/2;
      x58[1]=(x[5]+x[8])/2;
      x67[1]=(x[6]+x[7])/2;
      x78[1]=(x[7]+x[8])/2;
      u12[1]=(un[1]+un[2])/2;
      u14[1]=(un[1]+un[4])/2;
      u15[1]=(un[1]+un[5])/2;
      u23[1]=(un[2]+un[3])/2;
      u26[1]=(un[2]+un[6])/2;
      u34[1]=(un[3]+un[4])/2;
      u37[1]=(un[3]+un[7])/2;
      u48[1]=(un[4]+un[8])/2;
      u56[1]=(un[5]+un[6])/2;
      u58[1]=(un[5]+un[8])/2;
      u67[1]=(un[6]+un[7])/2;
      u78[1]=(un[7]+un[8])/2;
      x12[2]=(y[1]+y[2])/2;
      x14[2]=(y[1]+y[4])/2;
      x15[2]=(y[1]+y[5])/2;
      x23[2]=(y[2]+y[3])/2;
      x26[2]=(y[2]+y[6])/2;
      x34[2]=(y[3]+y[4])/2;
      x37[2]=(y[3]+y[7])/2;
      x48[2]=(y[4]+y[8])/2;
      x56[2]=(y[5]+y[6])/2;
      x58[2]=(y[5]+y[8])/2;
      x67[2]=(y[6]+y[7])/2;
      x78[2]=(y[7]+y[8])/2;
      u12[2]=(vn[1]+vn[2])/2;
      u14[2]=(vn[1]+vn[4])/2;
      u15[2]=(vn[1]+vn[5])/2;
      u23[2]=(vn[2]+vn[3])/2;
      u26[2]=(vn[2]+vn[6])/2;
      u34[2]=(vn[3]+vn[4])/2;
      u37[2]=(vn[3]+vn[7])/2;
      u48[2]=(vn[4]+vn[8])/2;
      u56[2]=(vn[5]+vn[6])/2;
      u58[2]=(vn[5]+vn[8])/2;
      u67[2]=(vn[6]+vn[7])/2;
      u78[2]=(vn[7]+vn[8])/2;
      x12[3]=(z[1]+z[2])/2;
      x14[3]=(z[1]+z[4])/2;
      x15[3]=(z[1]+z[5])/2;
      x23[3]=(z[2]+z[3])/2;
      x26[3]=(z[2]+z[6])/2;
      x34[3]=(z[3]+z[4])/2;
      x37[3]=(z[3]+z[7])/2;
      x48[3]=(z[4]+z[8])/2;
      x56[3]=(z[5]+z[6])/2;
      x58[3]=(z[5]+z[8])/2;
      x67[3]=(z[6]+z[7])/2;
      x78[3]=(z[7]+z[8])/2;
      u12[3]=(wn[1]+wn[2])/2;
      u14[3]=(wn[1]+wn[4])/2;
      u15[3]=(wn[1]+wn[5])/2;
      u23[3]=(wn[2]+wn[3])/2;
      u26[3]=(wn[2]+wn[6])/2;
      u34[3]=(wn[3]+wn[4])/2;
      u37[3]=(wn[3]+wn[7])/2;
      u48[3]=(wn[4]+wn[8])/2;
      u56[3]=(wn[5]+wn[6])/2;
      u58[3]=(wn[5]+wn[8])/2;
      u67[3]=(wn[6]+wn[7])/2;
      u78[3]=(wn[7]+wn[8])/2;
      fx13[1]=(x[1]+x[3]+x[2]+x[4])/4;
      fx16[1]=(x[1]+x[6]+x[2]+x[5])/4;
      fx18[1]=(x[1]+x[8]+x[4]+x[5])/4;
      fx27[1]=(x[2]+x[7]+x[3]+x[6])/4;
      fx38[1]=(x[3]+x[8]+x[4]+x[7])/4;
      fx57[1]=(x[5]+x[7]+x[6]+x[8])/4;
      fu13[1]=(un[1]+un[3]+un[2]+un[4])/4;
      fu16[1]=(un[1]+un[6]+un[2]+un[5])/4;
      fu18[1]=(un[1]+un[8]+un[4]+un[5])/4;
      fu27[1]=(un[2]+un[7]+un[3]+un[6])/4;
      fu38[1]=(un[3]+un[8]+un[4]+un[7])/4;
      fu57[1]=(un[5]+un[7]+un[6]+un[8])/4;
      fx13[2]=(y[1]+y[3]+y[2]+y[4])/4;
      fx16[2]=(y[1]+y[6]+y[2]+y[5])/4;
      fx18[2]=(y[1]+y[8]+y[4]+y[5])/4;
      fx27[2]=(y[2]+y[7]+y[3]+y[6])/4;
      fx38[2]=(y[3]+y[8]+y[4]+y[7])/4;
      fx57[2]=(y[5]+y[7]+y[6]+y[8])/4;
      fu13[2]=(vn[1]+vn[3]+vn[2]+vn[4])/4;
      fu16[2]=(vn[1]+vn[6]+vn[2]+vn[5])/4;
      fu18[2]=(vn[1]+vn[8]+vn[4]+vn[5])/4;
      fu27[2]=(vn[2]+vn[7]+vn[3]+vn[6])/4;
      fu38[2]=(vn[3]+vn[8]+vn[4]+vn[7])/4;
      fu57[2]=(vn[5]+vn[7]+vn[6]+vn[8])/4;
      fx13[3]=(z[1]+z[3]+z[2]+z[4])/4;
      fx16[3]=(z[1]+z[6]+z[2]+z[5])/4;
      fx18[3]=(z[1]+z[8]+z[4]+z[5])/4;
      fx27[3]=(z[2]+z[7]+z[3]+z[6])/4;
      fx38[3]=(z[3]+z[8]+z[4]+z[7])/4;
      fx57[3]=(z[5]+z[7]+z[6]+z[8])/4;
      fu13[3]=(wn[1]+wn[3]+wn[2]+wn[4])/4;
      fu16[3]=(wn[1]+wn[6]+wn[2]+wn[5])/4;
      fu18[3]=(wn[1]+wn[8]+wn[4]+wn[5])/4;
      fu27[3]=(wn[2]+wn[7]+wn[3]+wn[6])/4;
      fu38[3]=(wn[3]+wn[8]+wn[4]+wn[7])/4;
      fu57[3]=(wn[5]+wn[7]+wn[6]+wn[8])/4;
      squr(xc,x12,fx13,fx16,uc,u12,fu13,fu16,flux12,flux12r);
      flux12 = rou*flux12;
      flux12r = rou*flux12r;
      amar(flux12r,r12,emu,mode);
      flux21 = -flux12;
      r21 = 1.0-r12;
      squr(xc,x14,fx18,fx13,uc,u14,fu18,fu13,flux14,flux14r);
      flux14 = rou*flux14;
      flux14r = rou*flux14r;
      amar(flux14r,r14,emu,mode);
      flux41 = -flux14;
      r41 = 1.0-r14;
      squr(xc,x15,fx16,fx18,uc,u15,fu16,fu18,flux15,flux15r);
      flux15 = rou*flux15;
      flux15r = rou*flux15r;
      amar(flux15r,r15,emu,mode);
      flux51 = -flux15;
      r51 = 1.0-r15;
      squr(xc,x23,fx13,fx27,uc,u23,fu13,fu27,flux23,flux23r);
      flux23 = rou*flux23;
      flux23r = rou*flux23r;
      amar(flux23r,r23,emu,mode);
      flux32 = -flux23;
      r32 = 1.0-r23;
      squr(xc,x26,fx27,fx16,uc,u26,fu27,fu16,flux26,flux26r);
      flux26 = rou*flux26;
      flux26r = rou*flux26r;
      amar(flux26r,r26,emu,mode);
      flux62 = -flux26;
      r62 = 1.0-r26;
      squr(xc,x34,fx13,fx38,uc,u34,fu13,fu38,flux34,flux34r);
      flux34 = rou*flux34;
      flux34r = rou*flux34r;
      amar(flux34r,r34,emu,mode);
      flux43 = -flux34;
      r43 = 1.0-r34;
      squr(xc,x37,fx38,fx27,uc,u37,fu38,fu27,flux37,flux37r);
      flux37 = rou*flux37;
      flux37r = rou*flux37r;
      amar(flux37r,r37,emu,mode);
      flux73 = -flux37;
      r73 = 1.0-r37;
      squr(xc,x48,fx18,fx38,uc,u48,fu18,fu38,flux48,flux48r);
      flux48 = rou*flux48;
      flux48r = rou*flux48r;
      amar(flux48r,r48,emu,mode);
      flux84 = -flux48;
      r84 = 1.0-r48;
      squr(xc,x56,fx16,fx57,uc,u56,fu16,fu57,flux56,flux56r);
      flux56 = rou*flux56;
      flux56r = rou*flux56r;
      amar(flux56r,r56,emu,mode);
      flux65 = -flux56;
      r65 = 1.0-r56;
      squr(xc,x58,fx57,fx18,uc,u58,fu57,fu18,flux58,flux58r);
      flux58 = rou*flux58;
      flux58r = rou*flux58r;
      amar(flux58r,r58,emu,mode);
      flux85 = -flux58;
      r85 = 1.0-r58;
      squr(xc,x67,fx27,fx57,uc,u67,fu27,fu57,flux67,flux67r);
      flux67 = rou*flux67;
      flux67r = rou*flux67r;
      amar(flux67r,r67,emu,mode);
      flux76 = -flux67;
      r76 = 1.0-r67;
      squr(xc,x78,fx38,fx57,uc,u78,fu38,fu57,flux78,flux78r);
      flux78 = rou*flux78;
      flux78r = rou*flux78r;
      amar(flux78r,r78,emu,mode);
      flux87 = -flux78;
      r87 = 1.0-r78;
  eqn[(1-1)*32+1-1]=(r12-1.)*flux12+(r14-1.)*flux14+(r15-1.)
   *flux15;
  eqn[(1-1)*32+5-1]=(1.-r12)*flux12;
  eqn[(1-1)*32+13-1]=(1.-r14)*flux14;
  eqn[(1-1)*32+17-1]=(1.-r15)*flux15;
      eload[1]=0.0;
  eqn[(5-1)*32+5-1]=(r23-1.)*flux23+(r21-1.)*flux21+(r26-1.)
   *flux26;
  eqn[(5-1)*32+9-1]=(1.-r23)*flux23;
  eqn[(5-1)*32+1-1]=(1.-r21)*flux21;
  eqn[(5-1)*32+21-1]=(1.-r26)*flux26;
      eload[5]=0.0;
  eqn[(9-1)*32+9-1]=(r34-1.)*flux34+(r32-1.)*flux32+(r37-1.)
   *flux37;
  eqn[(9-1)*32+13-1]=(1.-r34)*flux34;
  eqn[(9-1)*32+5-1]=(1.-r32)*flux32;
  eqn[(9-1)*32+25-1]=(1.-r37)*flux37;
      eload[9]=0.0;
  eqn[(13-1)*32+13-1]=(r41-1.)*flux41+(r43-1.)*flux43+(r48-1.)
   *flux48;
  eqn[(13-1)*32+1-1]=(1.-r41)*flux41;
  eqn[(13-1)*32+9-1]=(1.-r43)*flux43;
  eqn[(13-1)*32+29-1]=(1.-r48)*flux48;
      eload[13]=0.0;
  eqn[(17-1)*32+17-1]=(r58-1.)*flux58+(r56-1.)*flux56+(r51-1.)
   *flux51;
  eqn[(17-1)*32+29-1]=(1.-r58)*flux58;
  eqn[(17-1)*32+21-1]=(1.-r56)*flux56;
  eqn[(17-1)*32+1-1]=(1.-r51)*flux51;
      eload[17]=0.0;
  eqn[(21-1)*32+21-1]=(r65-1.)*flux65+(r67-1.)*flux67+(r62-1.)
   *flux62;
  eqn[(21-1)*32+17-1]=(1.-r65)*flux65;
  eqn[(21-1)*32+25-1]=(1.-r67)*flux67;
  eqn[(21-1)*32+5-1]=(1.-r62)*flux62;
      eload[21]=0.0;
  eqn[(25-1)*32+25-1]=(r76-1.)*flux76+(r78-1.)*flux78+(r73-1.)
   *flux73;
  eqn[(25-1)*32+21-1]=(1.-r76)*flux76;
  eqn[(25-1)*32+29-1]=(1.-r78)*flux78;
  eqn[(25-1)*32+9-1]=(1.-r73)*flux73;
      eload[25]=0.0;
  eqn[(29-1)*32+29-1]=(r87-1.)*flux87+(r85-1.)*flux85+(r84-1.)
   *flux84;
  eqn[(29-1)*32+25-1]=(1.-r87)*flux87;
  eqn[(29-1)*32+17-1]=(1.-r85)*flux85;
  eqn[(29-1)*32+13-1]=(1.-r84)*flux84;
      eload[29]=0.0;
  eqn[(2-1)*32+1-1]=(r12-1.)*flux12+(r14-1.)*flux14+(r15-1.)
   *flux15;
  eqn[(2-1)*32+5-1]=(1.-r12)*flux12;
  eqn[(2-1)*32+13-1]=(1.-r14)*flux14;
  eqn[(2-1)*32+17-1]=(1.-r15)*flux15;
      eload[2]=0.0;
  eqn[(6-1)*32+5-1]=(r23-1.)*flux23+(r21-1.)*flux21+(r26-1.)
   *flux26;
  eqn[(6-1)*32+9-1]=(1.-r23)*flux23;
  eqn[(6-1)*32+1-1]=(1.-r21)*flux21;
  eqn[(6-1)*32+21-1]=(1.-r26)*flux26;
      eload[6]=0.0;
  eqn[(10-1)*32+9-1]=(r34-1.)*flux34+(r32-1.)*flux32+(r37-1.)
   *flux37;
  eqn[(10-1)*32+13-1]=(1.-r34)*flux34;
  eqn[(10-1)*32+5-1]=(1.-r32)*flux32;
  eqn[(10-1)*32+25-1]=(1.-r37)*flux37;
      eload[10]=0.0;
  eqn[(14-1)*32+13-1]=(r41-1.)*flux41+(r43-1.)*flux43+(r48-1.)
   *flux48;
  eqn[(14-1)*32+1-1]=(1.-r41)*flux41;
  eqn[(14-1)*32+9-1]=(1.-r43)*flux43;
  eqn[(14-1)*32+29-1]=(1.-r48)*flux48;
      eload[14]=0.0;
  eqn[(18-1)*32+17-1]=(r58-1.)*flux58+(r56-1.)*flux56+(r51-1.)
   *flux51;
  eqn[(18-1)*32+29-1]=(1.-r58)*flux58;
  eqn[(18-1)*32+21-1]=(1.-r56)*flux56;
  eqn[(18-1)*32+1-1]=(1.-r51)*flux51;
      eload[18]=0.0;
  eqn[(22-1)*32+21-1]=(r65-1.)*flux65+(r67-1.)*flux67+(r62-1.)
   *flux62;
  eqn[(22-1)*32+17-1]=(1.-r65)*flux65;
  eqn[(22-1)*32+25-1]=(1.-r67)*flux67;
  eqn[(22-1)*32+5-1]=(1.-r62)*flux62;
      eload[22]=0.0;
  eqn[(26-1)*32+25-1]=(r76-1.)*flux76+(r78-1.)*flux78+(r73-1.)
   *flux73;
  eqn[(26-1)*32+21-1]=(1.-r76)*flux76;
  eqn[(26-1)*32+29-1]=(1.-r78)*flux78;
  eqn[(26-1)*32+9-1]=(1.-r73)*flux73;
      eload[26]=0.0;
  eqn[(30-1)*32+29-1]=(r87-1.)*flux87+(r85-1.)*flux85+(r84-1.)
   *flux84;
  eqn[(30-1)*32+25-1]=(1.-r87)*flux87;
  eqn[(30-1)*32+17-1]=(1.-r85)*flux85;
  eqn[(30-1)*32+13-1]=(1.-r84)*flux84;
      eload[30]=0.0;
  eqn[(3-1)*32+1-1]=(r12-1.)*flux12+(r14-1.)*flux14+(r15-1.)
   *flux15;
  eqn[(3-1)*32+5-1]=(1.-r12)*flux12;
  eqn[(3-1)*32+13-1]=(1.-r14)*flux14;
  eqn[(3-1)*32+17-1]=(1.-r15)*flux15;
      eload[3]=0.0;
  eqn[(7-1)*32+5-1]=(r23-1.)*flux23+(r21-1.)*flux21+(r26-1.)
   *flux26;
  eqn[(7-1)*32+9-1]=(1.-r23)*flux23;
  eqn[(7-1)*32+1-1]=(1.-r21)*flux21;
  eqn[(7-1)*32+21-1]=(1.-r26)*flux26;
      eload[7]=0.0;
  eqn[(11-1)*32+9-1]=(r34-1.)*flux34+(r32-1.)*flux32+(r37-1.)
   *flux37;
  eqn[(11-1)*32+13-1]=(1.-r34)*flux34;
  eqn[(11-1)*32+5-1]=(1.-r32)*flux32;
  eqn[(11-1)*32+25-1]=(1.-r37)*flux37;
      eload[11]=0.0;
  eqn[(15-1)*32+13-1]=(r41-1.)*flux41+(r43-1.)*flux43+(r48-1.)
   *flux48;
  eqn[(15-1)*32+1-1]=(1.-r41)*flux41;
  eqn[(15-1)*32+9-1]=(1.-r43)*flux43;
  eqn[(15-1)*32+29-1]=(1.-r48)*flux48;
      eload[15]=0.0;
  eqn[(19-1)*32+17-1]=(r58-1.)*flux58+(r56-1.)*flux56+(r51-1.)
   *flux51;
  eqn[(19-1)*32+29-1]=(1.-r58)*flux58;
  eqn[(19-1)*32+21-1]=(1.-r56)*flux56;
  eqn[(19-1)*32+1-1]=(1.-r51)*flux51;
      eload[19]=0.0;
  eqn[(23-1)*32+21-1]=(r65-1.)*flux65+(r67-1.)*flux67+(r62-1.)
   *flux62;
  eqn[(23-1)*32+17-1]=(1.-r65)*flux65;
  eqn[(23-1)*32+25-1]=(1.-r67)*flux67;
  eqn[(23-1)*32+5-1]=(1.-r62)*flux62;
      eload[23]=0.0;
  eqn[(27-1)*32+25-1]=(r76-1.)*flux76+(r78-1.)*flux78+(r73-1.)
   *flux73;
  eqn[(27-1)*32+21-1]=(1.-r76)*flux76;
  eqn[(27-1)*32+29-1]=(1.-r78)*flux78;
  eqn[(27-1)*32+9-1]=(1.-r73)*flux73;
      eload[27]=0.0;
  eqn[(31-1)*32+29-1]=(r87-1.)*flux87+(r85-1.)*flux85+(r84-1.)
   *flux84;
  eqn[(31-1)*32+25-1]=(1.-r87)*flux87;
  eqn[(31-1)*32+17-1]=(1.-r85)*flux85;
  eqn[(31-1)*32+13-1]=(1.-r84)*flux84;
      eload[31]=0.0;
 for (i=2; i<=ndof; ++i)
 for (j=1; j<=i-1; ++j)
 {
       cccc = eqn[(i-1)*32+j-1];
       eqn[(i-1)*32+j-1] = eqn[(j-1)*32+i-1];
       eqn[(j-1)*32+i-1] = cccc;
 }
 return;
}
 
