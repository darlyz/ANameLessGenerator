\ 双曲型方程算法文件 waveUr.sch（先求位移再求速度，瑞利阻尼）：
\ 基于先求位移再求速度粘性阻尼双曲线算法waveU:
\ ([M]+[C]*Δt+[S]*Δt*Δt)[U] = ([M]+[C]*Δt)[ˉU]+[M][ˉV]*Δt+[F]*Δt*Δt
\ 定义 [C] = b1[M]+b2[S] 带入上式并整理得到
\ ([M]*(1+b1*Δt)+[S]*(Δt+b2)*Δt)[U] = ([M]*(1+b1*Δt)+[S]*b2*Δt)[ˉU]+[M][ˉV]*Δt+[F]*Δt*Δt
\ --------------------------------------------------------------------------------------
DEFI
STIF s
MASS m
DAMP c
LOAD f
TYPE w
MDTY l
INIT 2

EQUATION
VECT u1,v1
\.......... 读取解空间中的 u1,v1 作为上一时刻的位移和速度 .........../
READ(s,unod) u1,v1
\................... 线性方程组左端项(分布矩阵) .................../
MATRIX = [s]*(b2+dt)*dt+[m]*(1+b1*dt)
\....................... 线性方程组右端项 ........................./
FORC = [f]*dt*dt+[m*u1]*(1+b1*dt)+[m*v1]*dt+[s*u1]*b2*dt

SOLUTION u
VECT u,u1,v1
$cc // 读取上一时刻位移和速度 u1 v1
READ(s,unod) u1,v1
$cc // 通过 v1 = (u-u1)/Δt 计算当前速度
[v1] = [u]-[u1]
[v1] = [v1]/dt
[u1] = [u]
$cc // 存储求解得到的当前时刻位移和速度 u1 v1
WRITE(o,unod) u1,v1

@BEGIN
 double b1,b2;
        b1 = dampalfa;
        b2 = dampbeta; // 瑞利阻尼系数

END
